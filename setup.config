# main configuration to setup the network
# usage - call by multiNodeLearning.py file
# to save different setting to run expect results


[Networks]
# ToDo Legacy with Random <<<<
# The type of each node 
# 0 - Legacy (Dumb) Node 
# 1 - Hopping Node
# 2 - Intermittent Node/ im Node
# 3 - DSA node (just avoids)  
# 4 - MDP Node
# 5 - a. DQN Node
# 6 - b. DQN-DoubleQ
# 7 - c. DQN-PriReplay
# 8 - d. DQN-Duel     
# 9 - Adv. MDP Node(ToDo)


numSteps = 10000
numChans = 6
ChannelAssignType = typeIn  

nodeTypes = [0, 1, 2, 3, 4, 5]

legacyChanList   = [0, 2, 4, 6, 8]
txProbability    = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
hoppingChanList  = [ [3, 5] ]
hoppingWidth     = 2
hopRate     = 10
imChanList       = [1]                      
imDutyCircleList = [0.2, 0.8]  



# test case to test "learning hidden" nodeTypes = [0,0,5,5] where 3rd & 4th is duplex conflict
# test case to test "learning spatial" nodeTypes = [0,0,0,5,5] where 4rd & 5th is duplex conflict


[Neural Network]
# in dqnxx.py mdp.py
# Set "explore ratio" - exploreTye, exploreDecay, exploreProbMin
# set "reward"

